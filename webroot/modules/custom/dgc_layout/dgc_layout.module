<?php

/**
 * @file
 * Contains dgc_layout.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Component\Serialization\Json;

/**
 * Implements hook_help().
 */
function dgc_layout_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the dgc_layout module.
    case 'help.page.dgc_layout':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('DGC layout customizations') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_preprocess_hook().
 */
function dgc_layout_preprocess_links__layout_builder_blocks(&$variables) {
  if (reset($variables['attributes']['class']) == "inline-block-list") {
    foreach ($variables['links'] as $delta => &$link) {
      $link_title = $link['link']['#title'];
      $dialog_options = _dgc_layout_get_dialog_options($link_title);
      $link['link']['#options']['attributes']['data-dialog-options'] = Json::encode($dialog_options);
      unset($link['link']['#options']['attributes']['data-dialog-renderer']);
    }
  }
}

/**
 * Implements hook_contextual_links_view_alter().
 */
function dgc_layout_contextual_links_view_alter(&$element, $items) {
  if (isset($element['#links']['layout-builder-block-update']['url'])) {
    $link_title = $element['#links']['layout-builder-block-update']['title'];
    /** @var \Drupal\Core\Url $url */
    $url = $element['#links']['layout-builder-block-update']['url'];
    $attributes = $url->getOption('attributes');
    unset($attributes['data-dialog-renderer']);
    $dialog_options = _dgc_layout_get_dialog_options($link_title);
    $attributes['data-dialog-options'] = Json::encode($dialog_options);
    $url->setOption('attributes', $attributes);
  }
}

/**
 * Implements hook_plugin_filter_TYPE__CONSUMER_alter().
 *
 * Curate the blocks available in the Layout Builder "Add Block" UI.
 */
function dgc_layout_plugin_filter_block__layout_builder_alter(array &$definitions, array $extra) {
  foreach ($definitions as $block_name => $block_definition) {
    if ($block_definition['id'] != 'inline_block') {
      //unset($definitions[$block_name]);
    }
  }
}

/**
 * Implements hook_plugin_filter_TYPE__CONSUMER_alter().
 *
 * Curate the layouts available in the Layout Builder "Add Section" UI.
 */
function dgc_layout_plugin_filter_layout__layout_builder_alter(array &$definitions, array $extra) {
  $allowed_layouts = [
    'xy-grid-12' => t('One Column'),
    'xy-grid-6-6' => t('2 Columns (50/50)'),
    'xy-grid-4-4-4' => t('3 Columns'),
    'xy-grid-4-8' => t('2 Columns (25/75)'),
    'xy-grid-8-4' => t('2 Columns (75/25)'),
  ];
  foreach ($definitions as $layout_name => &$layout_definition) {
    if (array_key_exists($layout_name, $allowed_layouts)) {
      $layout_definition->setLabel($allowed_layouts[$layout_name]);
    }
    else {
      unset($definitions[$layout_name]);
    }
  }
}

/**
 * Returns a dialog options array.
 *
 * @param string $title
 *   The dialog title.
 *
 * @return array
 *   The options array.
 */
function _dgc_layout_get_dialog_options($title) {
  return [
    'width' => '70%',
    'dialogClass' => 'layout-builder-inline-block',
    'title' => $title,
  ];
}
